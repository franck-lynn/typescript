


// /^(?!\.\/)/   不能以 ./开头
console.log(
    "01. 不能以./开头, 以这个开头就是 false ---> ",
    /^(?!\.\/)/.test('./以点斜杠开头'), 
    "\n02. 以斜杠开头, 不符合这个规则, 所以为 true---> ",
    /^(?!\.\/)/.test('/以点斜杠开头'), 
    "\n03. 以文字开头, 不符合这个规则, 所以为 true---> ",
    /^(?!\.\/)/.test('a以点斜/杠开头'), 
    "\n04. 以../开头, 不符合这个规则, 所以为 false ---> ",
    /^(?!\.\/)/.test('../a以点斜/杠开头'), 
)
console.log("**************************************************************")
// /^(?!.*/)/  不能以 0 个或者多个点并且有斜杠开头的
// /^(?!\.*\/)/ 需要转义
console.log(
    "01. 不能是./ 开头 ---> ", 
    /^(?!\.*\/)/.test('./abc'), 
    "\n02. 不能是../ 开头 ---> ", 
    /^(?!\.*\/)/.test('../abc'), 
    "\n03. 不能是/ 开头 ---> ", 
    /^(?!\.*\/)/.test('/abc'), 
    "\n04. 可以是字母开头 ---> ", 
    /^(?!\.*\/)/.test('abc'), 
)
console.log("**************************************************************")
// [] 是单个匹配, [^] 中括号里 ^ 取反, 不是/
// 有且仅有一个 
// ^(?!./) 不是 ./ 开头 
// ^[^/]* 开头不是 0个或多个 / 反斜杠
// \/ 有一个 / 反斜杠
// [^/] 不是0个或多个 / 反斜杠结尾
const reg = /^(?!(\.\/))^[^/]*\/[^/]*$/

console.log(
    "01. 开头不能是0到多个 / 反斜杠 ---> ", 
    reg.test('/packages/button'), 
    "\n02. 开头不能是 ./ .反斜杠 ---> ", 
    reg.test('./packages'),
    "\n03. 有一个中间 / 反斜杠可以 ---> ", 
    reg.test('packages/button'),
    "\n04. 多个 / 不行 ---> ", 
    reg.test('packages/butt/on')
)
console.log("**************************************************************")
// 重写 有且仅有一个 / 不在开头
// ^(?!.*/+) 开头不能是 ./, ../, //, ..// 等,  ^(?!\.*\/+)
// 后面紧跟着是 [^]* 非 / 的字符
// \/ 有一个 /
// [^/]*$ 不能是 0-n个 / 结尾

const reg1 = /^(?!\.*\/+)[^/]*\/[^/]*$/
console.log(
    "01. 开头不能是0到多个 / 反斜杠 ---> ", 
    reg1.test('/packages/button'), 
    "\n02. 开头不能是 ./ .反斜杠 ---> ", 
    reg1.test('./packages'),
    "\n03. 有一个中间 / 反斜杠可以 ---> ", 
    reg1.test('packages/button'),
    "\n04. 多个 / 不行 ---> ", 
    reg1.test('packages/butt/on'),
    "\n05. 多个 / 不行 ---> ", 
    reg1.test('packages/butt/'),
    "\n06. 多个 / 不行 ---> ", 
    reg1.test('packages')
)